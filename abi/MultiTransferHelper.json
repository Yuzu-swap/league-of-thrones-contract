{
  "address": "0xD839e3eF8f1cD3cA0A851CEc2E82f340863054A3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address payable[]",
          "name": "tos",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "value",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "data",
          "type": "string"
        }
      ],
      "name": "MultiValueTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tos",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "value",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "data",
          "type": "string"
        }
      ],
      "name": "MultiValueTransferErc20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tos",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "data",
          "type": "string"
        }
      ],
      "name": "MultiValueTransferErc721",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "len",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalValue",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "data",
          "type": "string"
        }
      ],
      "name": "transferManyErc20Value",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddr",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "addrs",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "len",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "data",
          "type": "string"
        }
      ],
      "name": "transferManyErc721Value",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable[]",
          "name": "addrs",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "len",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalValue",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "data",
          "type": "string"
        }
      ],
      "name": "transferManyValue",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa9c4e2aca859972e9502badd7ac21cc78c9017e8e7cf4c26e21a265d669a3b85",
  "receipt": {
    "to": null,
    "from": "0x8aC3195AEca398AaC7882520dd19d3C7c5e69E46",
    "contractAddress": "0xD839e3eF8f1cD3cA0A851CEc2E82f340863054A3",
    "transactionIndex": 39,
    "gasUsed": "4800000",
    "logsBloom": "0x
    "blockHash": "0xb1542c46cb1477bc1fc35ad1bcd9abf0408049c068b95177b70d32eaa4015f2d",
    "transactionHash": "0xa9c4e2aca859972e9502badd7ac21cc78c9017e8e7cf4c26e21a265d669a3b85",
    "logs": [],
    "blockNumber": 144469,
    "cumulativeGasUsed": "328978084",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "8edee51dd49450a6af3c0c3fb2531243",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable[]\",\"name\":\"tos\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"MultiValueTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tos\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"MultiValueTransferErc20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tos\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"MultiValueTransferErc721\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalValue\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"transferManyErc20Value\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddr\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"transferManyErc721Value\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"addrs\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalValue\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"transferManyValue\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TransferHelper.sol\":\"MultiTransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\"},\"contracts/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\npragma experimental ABIEncoderV2;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\n\\n\\ncontract MultiTransferHelper {\\n\\n\\n    event MultiValueTransfer(address from,address payable[] tos,uint[] value,string data);\\n    event MultiValueTransferErc20(address contractAddr,address from,address[] tos,uint[] value,string data);\\n    event MultiValueTransferErc721(address contractAddr, address from,address[] tos,uint[] tokenIds,string data);\\n\\n      \\n    \\n\\n    function transferManyValue(address payable[] memory addrs , uint256[] memory values,uint256 len,uint256 _totalValue,string memory data) payable public {\\n      require(len == addrs.length && len == values.length && len <= 100);\\n      require( _totalValue == msg.value );\\n      uint256 totalValue = 0; \\n      for (uint i = 0;i < len ; i++){\\n        totalValue += values[i];\\n        addrs[i].transfer(values[i]);\\n      }\\n//      emit MultiValueTransfer(address(this),addrs,values,data);\\n      require( totalValue  == _totalValue);\\n    }\\n\\n\\n    function transferManyErc20Value(address tokenAddr,address [] memory addrs , uint256[] memory values,uint256 len,uint256 _totalValue,string memory data) public {\\n      require(len == addrs.length && len == values.length && len <= 100);\\n      uint256 totalValue = 0; \\n      for (uint i = 0;i < len ; i++){\\n        totalValue += values[i];\\n        IERC20(tokenAddr).transferFrom(msg.sender,addrs[i] ,values[i]);\\n      }\\n    //  emit MultiValueTransferErc20(tokenAddr,msg.sender,addrs,values,data);\\n      require( totalValue  == _totalValue);\\n    }\\n\\n\\n    function transferManyErc721Value(address nftAddr,address [] memory addrs , uint256[] memory tokenIds,uint256 len,string memory data) public {\\n      require(len == addrs.length && len == tokenIds.length && len <= 100);\\n\\n      for (uint i = 0;i < len ; i++){\\n        IERC721(nftAddr).transferFrom(msg.sender,addrs[i] ,tokenIds[i]);\\n      }\\n     // emit MultiValueTransferErc721(nftAddr,msg.sender,addrs,tokenIds,data);\\n    }\\n\\n\\n\\n}\\n\",\"keccak256\":\"0xe0ad018958c70e34e066d3a312dd934943b839ed49951bfe14642ceda6b719c5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061078f806100206000396000f3fe6080604052600436106100345760003560e01c806334e752ea1461003957806339929fb11461005b578063e6ee7ab91461007b575b600080fd5b34801561004557600080fd5b50610059610054366004610527565b61008e565b005b34801561006757600080fd5b50610059610076366004610486565b61019f565b6100596100893660046105d0565b61026c565b84518314801561009e5750835183145b80156100ab575060648311155b6100b457600080fd5b6000805b84811015610189578581815181106100cc57fe5b602002602001015182019150876001600160a01b03166323b872dd338984815181106100f457fe5b602002602001015189858151811061010857fe5b60200260200101516040518463ffffffff1660e01b815260040161012e939291906106d6565b602060405180830381600087803b15801561014857600080fd5b505af115801561015c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018091906106af565b506001016100b8565b5082811461019657600080fd5b50505050505050565b8351821480156101af5750825182145b80156101bc575060648211155b6101c557600080fd5b60005b8281101561026457856001600160a01b03166323b872dd338784815181106101ec57fe5b602002602001015187858151811061020057fe5b60200260200101516040518463ffffffff1660e01b8152600401610226939291906106d6565b600060405180830381600087803b15801561024057600080fd5b505af1158015610254573d6000803e3d6000fd5b5050600190920191506101c89050565b505050505050565b84518314801561027c5750835183145b8015610289575060648311155b61029257600080fd5b34821461029e57600080fd5b6000805b8481101561032a578581815181106102b657fe5b6020026020010151820191508681815181106102ce57fe5b60200260200101516001600160a01b03166108fc8783815181106102ee57fe5b60200260200101519081150290604051600060405180830381858888f19350505050158015610321573d6000803e3d6000fd5b506001016102a2565b5082811461026457600080fd5b803561034281610741565b92915050565b600082601f830112610358578081fd5b813561036b61036682610721565b6106fa565b81815291506020808301908481018184028601820187101561038c57600080fd5b60005b848110156103b45781356103a281610741565b8452928201929082019060010161038f565b505050505092915050565b600082601f8301126103cf578081fd5b81356103dd61036682610721565b8181529150602080830190848101818402860182018710156103fe57600080fd5b60005b848110156103b457813584529282019290820190600101610401565b600082601f83011261042d578081fd5b813567ffffffffffffffff811115610443578182fd5b610456601f8201601f19166020016106fa565b915080825283602082850101111561046d57600080fd5b8060208401602084013760009082016020015292915050565b600080600080600060a0868803121561049d578081fd5b85356104a881610741565b9450602086013567ffffffffffffffff808211156104c4578283fd5b6104d089838a01610348565b955060408801359150808211156104e5578283fd5b6104f189838a016103bf565b945060608801359350608088013591508082111561050d578283fd5b5061051a8882890161041d565b9150509295509295909350565b60008060008060008060c0878903121561053f578081fd5b863561054a81610741565b9550602087013567ffffffffffffffff80821115610566578283fd5b6105728a838b01610348565b96506040890135915080821115610587578283fd5b6105938a838b016103bf565b9550606089013594506080890135935060a08901359150808211156105b6578283fd5b506105c389828a0161041d565b9150509295509295509295565b600080600080600060a086880312156105e7578081fd5b853567ffffffffffffffff808211156105fe578283fd5b818801915088601f830112610611578283fd5b813561061f61036682610721565b80828252602080830192508086018d82838702890101111561063f578788fd5b8796505b84871015610669576106558e82610337565b845260019690960195928101928101610643565b509099508a01359350505080821115610680578283fd5b61068c89838a016103bf565b95506040880135945060608801359350608088013591508082111561050d578283fd5b6000602082840312156106c0578081fd5b815180151581146106cf578182fd5b9392505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60405181810167ffffffffffffffff8111828210171561071957600080fd5b604052919050565b600067ffffffffffffffff821115610737578081fd5b5060209081020190565b6001600160a01b038116811461075657600080fd5b5056fea2646970667358221220c24358f020ecffbb36370a1606ace9235358a201654e89737fbdf66bee2848f064736f6c634300060c0033",
  "deployedBytecode": "0x6080604052600436106100345760003560e01c806334e752ea1461003957806339929fb11461005b578063e6ee7ab91461007b575b600080fd5b34801561004557600080fd5b50610059610054366004610527565b61008e565b005b34801561006757600080fd5b50610059610076366004610486565b61019f565b6100596100893660046105d0565b61026c565b84518314801561009e5750835183145b80156100ab575060648311155b6100b457600080fd5b6000805b84811015610189578581815181106100cc57fe5b602002602001015182019150876001600160a01b03166323b872dd338984815181106100f457fe5b602002602001015189858151811061010857fe5b60200260200101516040518463ffffffff1660e01b815260040161012e939291906106d6565b602060405180830381600087803b15801561014857600080fd5b505af115801561015c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018091906106af565b506001016100b8565b5082811461019657600080fd5b50505050505050565b8351821480156101af5750825182145b80156101bc575060648211155b6101c557600080fd5b60005b8281101561026457856001600160a01b03166323b872dd338784815181106101ec57fe5b602002602001015187858151811061020057fe5b60200260200101516040518463ffffffff1660e01b8152600401610226939291906106d6565b600060405180830381600087803b15801561024057600080fd5b505af1158015610254573d6000803e3d6000fd5b5050600190920191506101c89050565b505050505050565b84518314801561027c5750835183145b8015610289575060648311155b61029257600080fd5b34821461029e57600080fd5b6000805b8481101561032a578581815181106102b657fe5b6020026020010151820191508681815181106102ce57fe5b60200260200101516001600160a01b03166108fc8783815181106102ee57fe5b60200260200101519081150290604051600060405180830381858888f19350505050158015610321573d6000803e3d6000fd5b506001016102a2565b5082811461026457600080fd5b803561034281610741565b92915050565b600082601f830112610358578081fd5b813561036b61036682610721565b6106fa565b81815291506020808301908481018184028601820187101561038c57600080fd5b60005b848110156103b45781356103a281610741565b8452928201929082019060010161038f565b505050505092915050565b600082601f8301126103cf578081fd5b81356103dd61036682610721565b8181529150602080830190848101818402860182018710156103fe57600080fd5b60005b848110156103b457813584529282019290820190600101610401565b600082601f83011261042d578081fd5b813567ffffffffffffffff811115610443578182fd5b610456601f8201601f19166020016106fa565b915080825283602082850101111561046d57600080fd5b8060208401602084013760009082016020015292915050565b600080600080600060a0868803121561049d578081fd5b85356104a881610741565b9450602086013567ffffffffffffffff808211156104c4578283fd5b6104d089838a01610348565b955060408801359150808211156104e5578283fd5b6104f189838a016103bf565b945060608801359350608088013591508082111561050d578283fd5b5061051a8882890161041d565b9150509295509295909350565b60008060008060008060c0878903121561053f578081fd5b863561054a81610741565b9550602087013567ffffffffffffffff80821115610566578283fd5b6105728a838b01610348565b96506040890135915080821115610587578283fd5b6105938a838b016103bf565b9550606089013594506080890135935060a08901359150808211156105b6578283fd5b506105c389828a0161041d565b9150509295509295509295565b600080600080600060a086880312156105e7578081fd5b853567ffffffffffffffff808211156105fe578283fd5b818801915088601f830112610611578283fd5b813561061f61036682610721565b80828252602080830192508086018d82838702890101111561063f578788fd5b8796505b84871015610669576106558e82610337565b845260019690960195928101928101610643565b509099508a01359350505080821115610680578283fd5b61068c89838a016103bf565b95506040880135945060608801359350608088013591508082111561050d578283fd5b6000602082840312156106c0578081fd5b815180151581146106cf578182fd5b9392505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60405181810167ffffffffffffffff8111828210171561071957600080fd5b604052919050565b600067ffffffffffffffff821115610737578081fd5b5060209081020190565b6001600160a01b038116811461075657600080fd5b5056fea2646970667358221220c24358f020ecffbb36370a1606ace9235358a201654e89737fbdf66bee2848f064736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}